, type = "lower"
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle"
ggtheme = ggplot2::theme_gray,
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle")
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle",
colors = c("#6D9EC1", "white", "#E46726"))
runApp('C:/Users/jia yi/Desktop/MITB/Sem2/ISSS608 Visual Analytics and its applications/Project/RShiny/ProjRShiny_master')
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle",
colors = c("#6D9EC1", "white", "#E46726", type = 'lower'))
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle",
colors = c("#6D9EC1", "white", "#E46726", type = 'lower', ggtheme = theme_classic))
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle",
colors = c("#6D9EC1", "white", "#E46726", type = 'lower', ggtheme = theme_void))
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle",
colors = c("#6D9EC1", "white", "#E46726", type = 'lower', ggtheme = theme_minimal))
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle",type = "lower"
colors = c("#6D9EC1", "white", "#E46726", type = 'lower', ggtheme = theme_minimal))
library(ggcorrplot)
corr <- round(cor(corr_central_jy), 1)
p.mat <- cor_pmat(corr_central_jy)
# ggcorrplot(corr, hc.order = TRUE, type = "lower",
#    lab = TRUE)
ggcorrplot(corr, method = "circle",type = "lower",
colors = c("#6D9EC1", "white", "#E46726", type = 'lower', ggtheme = theme_minimal))
runApp('C:/Users/jia yi/Desktop/MITB/Sem2/ISSS608 Visual Analytics and its applications/Project/RShiny/ProjRShiny_master')
runApp()
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
M =cor(corr_central_jy)
p.mat <- cor.mtest(corr_central_jy)$p
q <- corrplot(corr_central_jy, method = "color", col = col(200),
type = "full", order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt = 90, # Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.5, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
M =cor(corr_central_jy)
p.mat <- cor.mtest(corr_central_jy)$p
q <- corrplot(corr_central_jy, method = "color", col = col(200),
type = "full", order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt = 90, # Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.5, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
runApp('C:/Users/jia yi/Desktop/MITB/Sem2/ISSS608 Visual Analytics and its applications/Project/RShiny/ProjRShiny_master')
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
M =cor(corr_central_jy)
p.mat <- cor.mtest(corr_central_jy)$p
q <- corrplot(M, method = "color", col = col(200),
type = "full", order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt = 90, # Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.5, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
# https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html
runApp('C:/Users/jia yi/Desktop/MITB/Sem2/ISSS608 Visual Analytics and its applications/Project/RShiny/ProjRShiny_master')
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
text=~factor(type, labels=c("red","white")),
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
p
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
text=~factor(type), #, labels=c("red","white")
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
p
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
#text=~factor(type), #, labels=c("red","white")
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
p
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
#text=~factor(type), #, labels=c("red","white")
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
#yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
p
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
#text=~factor(type), #, labels=c("red","white")
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
p
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
#text=~factor(type), #, labels=c("red","white")
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
lp <- p %>% style(showupperhalf = F)
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
#text=~factor(type), #, labels=c("red","white")
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
lp <- p %>% style(showupperhalf = F)
lp
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
#text=~factor(type), #, labels=c("red","white")
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13),tickangle = 45),
yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
lp <- p %>% style(showupperhalf = F )
lp
axis = list(showline=FALSE,
zeroline=FALSE,
gridcolor='#ffff',
ticklen=4,
titlefont=list(size=13))
p <- pass_central %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='betweenness', values=~`between`),
list(label='closeness', values=~`closeness`),
list(label='eigenvalue', values=~`eigen`),
list(label='degree', values=~`degree`),
list(label='frequencyIn', values=~`frequencyIn`),
list(label='frequencyOut', values=~`frequencyOut`)
),
#text=~factor(type), #, labels=c("red","white")
diagonal=list(visible=F),
marker = list(
color = '#ef553b',
size = 5,
line = list(
width = 1,
color = 'rgb(230,230,230)'
)
)
) %>%
layout(
title = "Interactive Scatterplot Matrix (SPLOM) for Wine Quality Data",
hovermode='closest',
dragmode = 'select',
plot_bgcolor='rgba(240,240,240, 0.95)',
xaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13,tickangle = 45)),
yaxis=list(domain=NULL, showline=F, zeroline=F, gridcolor='#ffff', ticklen=4, titlefont=list(size=13)),
xaxis2=axis,
xaxis3=axis,
xaxis4=axis,
xaxis5=axis,
xaxis6=axis,
xaxis7=axis
)
lp <- p %>% style(showupperhalf = F )
lp
runApp('C:/Users/jia yi/Desktop/MITB/Sem2/ISSS608 Visual Analytics and its applications/Project/RShiny/ProjRShiny_master')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
rsconnect::deployApp('C:\\Users\\jia yi\\Desktop\\MITB\\Sem2\\ISSS608 Visual Analytics and its applications\\Project\\RShiny\\ProjRShiny_jiayi')
rsconnect::deployApp('C:\\Users\\jia yi\\Desktop\\MITB\\Sem2\\ISSS608 Visual Analytics and its applications\\Project\\RShiny\\ProjRShiny_master')
rsconnect::deployApp('C:\\Users\\jia yi\\Desktop\\MITB\\Sem2\\ISSS608 Visual Analytics and its applications\\Project\\RShiny\\ProjRShiny_master')
rsconnect::deployApp('C:\\Users\\jia yi\\Desktop\\MITB\\Sem2\\ISSS608 Visual Analytics and its applications\\Project\\RShiny\\ProjRShiny_master')
require(devtools)
install_version("lwgeom", version = "0.2.1", repos = "http://cran.us.r-project.org")
require(devtools)
install_version("lwgeom", version = "0.2-1", repos = "http://cran.us.r-project.org")
require(devtools)
install_version("lwgeom", version = "0.2-1", repos = "http://cran.us.r-project.org")
require(devtools)
install_version("lwgeom", version = "0.2-1", repos = "http://cran.us.r-project.org")
rsconnect::deployApp('C:\\Users\\jia yi\\Desktop\\MITB\\Sem2\\ISSS608 Visual Analytics and its applications\\Project\\RShiny\\ProjRShiny_master')
